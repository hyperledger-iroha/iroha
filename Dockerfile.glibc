# base stage
FROM debian:bookworm-slim AS builder

# install required packages
RUN apt-get update -y && \
     apt-get install -y curl build-essential mold pkg-config libssl-dev

# set up Rust toolchain
RUN curl https://sh.rustup.rs -sSf | bash -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"
RUN rustup toolchain install nightly-2023-06-25
RUN rustup default nightly-2023-06-25
RUN rustup target add wasm32-unknown-unknown
RUN rustup component add rust-src

# builder stage
WORKDIR /iroha
COPY . .
ARG PROFILE="deploy"
ARG RUSTFLAGS=""
ARG FEATURES=""
ARG CARGOFLAGS=""
RUN RUSTFLAGS="${RUSTFLAGS}" mold --run cargo ${CARGOFLAGS} build --target x86_64-unknown-linux-gnu --profile "${PROFILE}" --features "${FEATURES}"

# final image
FROM debian:bookworm-slim

ARG PROFILE="deploy"
ARG  STORAGE=/storage
ARG  TARGET_DIR=/iroha/target/x86_64-unknown-linux-gnu/${PROFILE}
ENV  BIN_PATH=/usr/local/bin/
ENV  CONFIG_DIR=/config
ENV  IROHA2_CONFIG_PATH=$CONFIG_DIR/config.json
ENV  IROHA2_GENESIS_PATH=$CONFIG_DIR/genesis.json
ENV  KURA_BLOCK_STORE_PATH=$STORAGE
ENV  WASM_DIRECTORY=/app/.cache/wasmtime
ENV  USER=iroha
ENV  UID=1001
ENV  GID=1001

RUN  set -ex && \
     apt-get update -y && \
     apt-get install -y curl ca-certificates && \
     addgroup --gid $GID $USER && \
     adduser \
     --disabled-password \
     --gecos "" \
     --home /app \
     --ingroup "$USER" \
     --no-create-home \
     --uid "$UID" \
     "$USER" && \
     mkdir -p $CONFIG_DIR && \
     mkdir -p $STORAGE && \
     mkdir -p $WASM_DIRECTORY && \
     chown $USER:$USER $STORAGE && \
     chown $USER:$USER $WASM_DIRECTORY

COPY --from=builder $TARGET_DIR/iroha $BIN_PATH
COPY --from=builder $TARGET_DIR/iroha_client_cli $BIN_PATH
COPY --from=builder $TARGET_DIR/kagami $BIN_PATH
USER $USER
CMD ["iroha"]
