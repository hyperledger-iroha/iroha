{
  "Account": {
    "Struct": [
      {
        "name": "id",
        "type": "AccountId"
      },
      {
        "name": "assets",
        "type": "SortedMap<AssetId, Asset>"
      },
      {
        "name": "signatories",
        "type": "SortedVec<PublicKey>"
      },
      {
        "name": "signature_check_condition",
        "type": "SignatureCheckCondition"
      },
      {
        "name": "metadata",
        "type": "Metadata"
      },
      {
        "name": "roles",
        "type": "SortedVec<RoleId>"
      }
    ]
  },
  "AccountEvent": {
    "Enum": [
      {
        "name": "Asset",
        "type": "AssetEvent"
      },
      {
        "name": "Created",
        "type": "Account"
      },
      {
        "name": "Deleted",
        "type": "AccountId"
      },
      {
        "name": "AuthenticationAdded",
        "type": "AccountId"
      },
      {
        "name": "AuthenticationRemoved",
        "type": "AccountId"
      },
      {
        "name": "PermissionAdded",
        "type": "AccountPermissionChanged"
      },
      {
        "name": "PermissionRemoved",
        "type": "AccountPermissionChanged"
      },
      {
        "name": "RoleRevoked",
        "type": "AccountRoleChanged"
      },
      {
        "name": "RoleGranted",
        "type": "AccountRoleChanged"
      },
      {
        "name": "MetadataInserted",
        "type": "MetadataChanged<AccountId>"
      },
      {
        "name": "MetadataRemoved",
        "type": "MetadataChanged<AccountId>"
      }
    ]
  },
  "AccountEventFilter": {
    "Enum": [
      {
        "name": "ByCreated"
      },
      {
        "name": "ByDeleted"
      },
      {
        "name": "ByAuthenticationAdded"
      },
      {
        "name": "ByAuthenticationRemoved"
      },
      {
        "name": "ByPermissionAdded"
      },
      {
        "name": "ByPermissionRemoved"
      },
      {
        "name": "ByRoleRevoked"
      },
      {
        "name": "ByRoleGranted"
      },
      {
        "name": "ByMetadataInserted"
      },
      {
        "name": "ByMetadataRemoved"
      },
      {
        "name": "ByAsset",
        "type": "FilterOpt<AssetFilter>"
      }
    ]
  },
  "AccountFilter": {
    "Struct": [
      {
        "name": "origin_filter",
        "type": "FilterOpt<OriginFilter<AccountEvent>>"
      },
      {
        "name": "event_filter",
        "type": "FilterOpt<AccountEventFilter>"
      }
    ]
  },
  "AccountId": {
    "Struct": [
      {
        "name": "name",
        "type": "Name"
      },
      {
        "name": "domain_id",
        "type": "DomainId"
      }
    ]
  },
  "AccountPermissionChanged": {
    "Struct": [
      {
        "name": "account_id",
        "type": "AccountId"
      },
      {
        "name": "permission_id",
        "type": "PermissionTokenId"
      }
    ]
  },
  "AccountRoleChanged": {
    "Struct": [
      {
        "name": "account_id",
        "type": "AccountId"
      },
      {
        "name": "role_id",
        "type": "RoleId"
      }
    ]
  },
  "Action<FilterBox, Executable>": {
    "Struct": [
      {
        "name": "executable",
        "type": "Executable"
      },
      {
        "name": "repeats",
        "type": "Repeats"
      },
      {
        "name": "technical_account",
        "type": "AccountId"
      },
      {
        "name": "filter",
        "type": "FilterBox"
      },
      {
        "name": "metadata",
        "type": "Metadata"
      }
    ]
  },
  "Action<FilterBox, OptimizedExecutable>": {
    "Struct": [
      {
        "name": "executable",
        "type": "OptimizedExecutable"
      },
      {
        "name": "repeats",
        "type": "Repeats"
      },
      {
        "name": "technical_account",
        "type": "AccountId"
      },
      {
        "name": "filter",
        "type": "FilterBox"
      },
      {
        "name": "metadata",
        "type": "Metadata"
      }
    ]
  },
  "Add": {
    "Struct": [
      {
        "name": "left",
        "type": "EvaluatesTo<NumericValue>"
      },
      {
        "name": "right",
        "type": "EvaluatesTo<NumericValue>"
      }
    ]
  },
  "Algorithm": {
    "Enum": [
      {
        "name": "Ed25519"
      },
      {
        "name": "Secp256k1"
      },
      {
        "name": "BlsNormal"
      },
      {
        "name": "BlsSmall"
      }
    ]
  },
  "And": {
    "Struct": [
      {
        "name": "left",
        "type": "EvaluatesTo<Bool>"
      },
      {
        "name": "right",
        "type": "EvaluatesTo<Bool>"
      }
    ]
  },
  "Array<Interval<u16>, 8>": {
    "Array": {
      "type": "Interval<u16>",
      "len": 8
    }
  },
  "Array<Interval<u8>, 4>": {
    "Array": {
      "type": "Interval<u8>",
      "len": 4
    }
  },
  "Array<u16, 8>": {
    "Array": {
      "type": "u16",
      "len": 8
    }
  },
  "Array<u8, 32>": {
    "Array": {
      "type": "u8",
      "len": 32
    }
  },
  "Array<u8, 4>": {
    "Array": {
      "type": "u8",
      "len": 4
    }
  },
  "Asset": {
    "Struct": [
      {
        "name": "id",
        "type": "AssetId"
      },
      {
        "name": "value",
        "type": "AssetValue"
      }
    ]
  },
  "AssetChanged": {
    "Struct": [
      {
        "name": "asset_id",
        "type": "AssetId"
      },
      {
        "name": "amount",
        "type": "AssetValue"
      }
    ]
  },
  "AssetDefinition": {
    "Struct": [
      {
        "name": "id",
        "type": "AssetDefinitionId"
      },
      {
        "name": "value_type",
        "type": "AssetValueType"
      },
      {
        "name": "mintable",
        "type": "Mintable"
      },
      {
        "name": "logo",
        "type": "Option<IpfsPath>"
      },
      {
        "name": "metadata",
        "type": "Metadata"
      },
      {
        "name": "owned_by",
        "type": "AccountId"
      }
    ]
  },
  "AssetDefinitionEvent": {
    "Enum": [
      {
        "name": "Created",
        "type": "AssetDefinition"
      },
      {
        "name": "MintabilityChanged",
        "type": "AssetDefinitionId"
      },
      {
        "name": "OwnerChanged",
        "type": "AssetDefinitionOwnerChanged"
      },
      {
        "name": "Deleted",
        "type": "AssetDefinitionId"
      },
      {
        "name": "MetadataInserted",
        "type": "MetadataChanged<AssetDefinitionId>"
      },
      {
        "name": "MetadataRemoved",
        "type": "MetadataChanged<AssetDefinitionId>"
      },
      {
        "name": "TotalQuantityChanged",
        "type": "AssetDefinitionTotalQuantityChanged"
      }
    ]
  },
  "AssetDefinitionEventFilter": {
    "Enum": [
      {
        "name": "ByCreated"
      },
      {
        "name": "ByMintabilityChanged"
      },
      {
        "name": "ByOwnerChanged"
      },
      {
        "name": "ByDeleted"
      },
      {
        "name": "ByMetadataInserted"
      },
      {
        "name": "ByMetadataRemoved"
      },
      {
        "name": "ByTotalQuantityChanged"
      }
    ]
  },
  "AssetDefinitionFilter": {
    "Struct": [
      {
        "name": "origin_filter",
        "type": "FilterOpt<OriginFilter<AssetDefinitionEvent>>"
      },
      {
        "name": "event_filter",
        "type": "FilterOpt<AssetDefinitionEventFilter>"
      }
    ]
  },
  "AssetDefinitionId": {
    "Struct": [
      {
        "name": "name",
        "type": "Name"
      },
      {
        "name": "domain_id",
        "type": "DomainId"
      }
    ]
  },
  "AssetDefinitionOwnerChanged": {
    "Struct": [
      {
        "name": "asset_definition_id",
        "type": "AssetDefinitionId"
      },
      {
        "name": "new_owner",
        "type": "AccountId"
      }
    ]
  },
  "AssetDefinitionTotalQuantityChanged": {
    "Struct": [
      {
        "name": "asset_definition_id",
        "type": "AssetDefinitionId"
      },
      {
        "name": "total_amount",
        "type": "NumericValue"
      }
    ]
  },
  "AssetEvent": {
    "Enum": [
      {
        "name": "Created",
        "type": "Asset"
      },
      {
        "name": "Deleted",
        "type": "AssetId"
      },
      {
        "name": "Added",
        "type": "AssetChanged"
      },
      {
        "name": "Removed",
        "type": "AssetChanged"
      },
      {
        "name": "MetadataInserted",
        "type": "MetadataChanged<AssetId>"
      },
      {
        "name": "MetadataRemoved",
        "type": "MetadataChanged<AssetId>"
      }
    ]
  },
  "AssetEventFilter": {
    "Enum": [
      {
        "name": "ByCreated"
      },
      {
        "name": "ByDeleted"
      },
      {
        "name": "ByAdded"
      },
      {
        "name": "ByRemoved"
      },
      {
        "name": "ByMetadataInserted"
      },
      {
        "name": "ByMetadataRemoved"
      }
    ]
  },
  "AssetFilter": {
    "Struct": [
      {
        "name": "origin_filter",
        "type": "FilterOpt<OriginFilter<AssetEvent>>"
      },
      {
        "name": "event_filter",
        "type": "FilterOpt<AssetEventFilter>"
      }
    ]
  },
  "AssetId": {
    "Struct": [
      {
        "name": "definition_id",
        "type": "AssetDefinitionId"
      },
      {
        "name": "account_id",
        "type": "AccountId"
      }
    ]
  },
  "AssetValue": {
    "Enum": [
      {
        "name": "Quantity",
        "type": "u32"
      },
      {
        "name": "BigQuantity",
        "type": "u128"
      },
      {
        "name": "Fixed",
        "type": "Fixed"
      },
      {
        "name": "Store",
        "type": "Metadata"
      }
    ]
  },
  "AssetValueType": {
    "Enum": [
      {
        "name": "Quantity"
      },
      {
        "name": "BigQuantity"
      },
      {
        "name": "Fixed"
      },
      {
        "name": "Store"
      }
    ]
  },
  "AtIndex": {
    "Struct": [
      {
        "name": "index",
        "type": "u32"
      },
      {
        "name": "predicate",
        "type": "ValuePredicate"
      }
    ]
  },
  "BlockHeader": {
    "Struct": [
      {
        "name": "timestamp",
        "type": "u128"
      },
      {
        "name": "consensus_estimation",
        "type": "u64"
      },
      {
        "name": "height",
        "type": "u64"
      },
      {
        "name": "view_change_index",
        "type": "u64"
      },
      {
        "name": "previous_block_hash",
        "type": "Option<HashOf<VersionedCommittedBlock>>"
      },
      {
        "name": "transactions_hash",
        "type": "Option<HashOf<MerkleTree<VersionedSignedTransaction>>>"
      },
      {
        "name": "rejected_transactions_hash",
        "type": "Option<HashOf<MerkleTree<VersionedSignedTransaction>>>"
      },
      {
        "name": "committed_with_topology",
        "type": "Vec<PeerId>"
      }
    ]
  },
  "BlockMessage": "VersionedCommittedBlock",
  "BlockRejectionReason": {
    "Enum": [
      {
        "name": "ConsensusBlockRejection"
      }
    ]
  },
  "BlockSubscriptionRequest": "u64",
  "Bool": "Bool",
  "BurnBox": {
    "Struct": [
      {
        "name": "object",
        "type": "EvaluatesTo<Value>"
      },
      {
        "name": "destination_id",
        "type": "EvaluatesTo<IdBox>"
      }
    ]
  },
  "CommittedBlock": {
    "Struct": [
      {
        "name": "header",
        "type": "BlockHeader"
      },
      {
        "name": "rejected_transactions",
        "type": "Vec<VersionedRejectedTransaction>"
      },
      {
        "name": "transactions",
        "type": "Vec<VersionedValidTransaction>"
      },
      {
        "name": "event_recommendations",
        "type": "Vec<Event>"
      },
      {
        "name": "signatures",
        "type": "SignaturesOf<CommittedBlock>"
      }
    ]
  },
  "Compact<u128>": {
    "Int": "Compact"
  },
  "Conditional": {
    "Struct": [
      {
        "name": "condition",
        "type": "EvaluatesTo<Bool>"
      },
      {
        "name": "then",
        "type": "InstructionBox"
      },
      {
        "name": "otherwise",
        "type": "Option<InstructionBox>"
      }
    ]
  },
  "ConfigurationEvent": {
    "Enum": [
      {
        "name": "Changed",
        "type": "ParameterId"
      },
      {
        "name": "Created",
        "type": "ParameterId"
      },
      {
        "name": "Deleted",
        "type": "ParameterId"
      }
    ]
  },
  "Container": {
    "Enum": [
      {
        "name": "Any",
        "type": "ValuePredicate"
      },
      {
        "name": "All",
        "type": "ValuePredicate"
      },
      {
        "name": "AtIndex",
        "type": "AtIndex"
      },
      {
        "name": "ValueOfKey",
        "type": "ValueOfKey"
      },
      {
        "name": "HasKey",
        "type": "Name"
      }
    ]
  },
  "Contains": {
    "Struct": [
      {
        "name": "collection",
        "type": "EvaluatesTo<Vec<Value>>"
      },
      {
        "name": "element",
        "type": "EvaluatesTo<Value>"
      }
    ]
  },
  "ContainsAll": {
    "Struct": [
      {
        "name": "collection",
        "type": "EvaluatesTo<Vec<Value>>"
      },
      {
        "name": "elements",
        "type": "EvaluatesTo<Vec<Value>>"
      }
    ]
  },
  "ContainsAny": {
    "Struct": [
      {
        "name": "collection",
        "type": "EvaluatesTo<Vec<Value>>"
      },
      {
        "name": "elements",
        "type": "EvaluatesTo<Vec<Value>>"
      }
    ]
  },
  "ContextValue": {
    "Struct": [
      {
        "name": "value_name",
        "type": "Name"
      }
    ]
  },
  "DataEntityFilter": {
    "Enum": [
      {
        "name": "ByPeer",
        "type": "FilterOpt<PeerFilter>"
      },
      {
        "name": "ByDomain",
        "type": "FilterOpt<DomainFilter>"
      },
      {
        "name": "ByAccount",
        "type": "FilterOpt<AccountFilter>"
      },
      {
        "name": "ByAssetDefinition",
        "type": "FilterOpt<AssetDefinitionFilter>"
      },
      {
        "name": "ByAsset",
        "type": "FilterOpt<AssetFilter>"
      },
      {
        "name": "ByTrigger",
        "type": "FilterOpt<TriggerFilter>"
      },
      {
        "name": "ByRole",
        "type": "FilterOpt<RoleFilter>"
      }
    ]
  },
  "DataEvent": {
    "Enum": [
      {
        "name": "Peer",
        "type": "PeerEvent"
      },
      {
        "name": "Domain",
        "type": "DomainEvent"
      },
      {
        "name": "Account",
        "type": "AccountEvent"
      },
      {
        "name": "AssetDefinition",
        "type": "AssetDefinitionEvent"
      },
      {
        "name": "Asset",
        "type": "AssetEvent"
      },
      {
        "name": "Trigger",
        "type": "TriggerEvent"
      },
      {
        "name": "Role",
        "type": "RoleEvent"
      },
      {
        "name": "PermissionToken",
        "type": "PermissionTokenEvent"
      },
      {
        "name": "Configuration",
        "type": "ConfigurationEvent"
      },
      {
        "name": "Validator",
        "type": "ValidatorEvent"
      }
    ]
  },
  "Divide": {
    "Struct": [
      {
        "name": "left",
        "type": "EvaluatesTo<NumericValue>"
      },
      {
        "name": "right",
        "type": "EvaluatesTo<NumericValue>"
      }
    ]
  },
  "DoesAccountHavePermissionToken": {
    "Struct": [
      {
        "name": "account_id",
        "type": "EvaluatesTo<AccountId>"
      },
      {
        "name": "permission_token",
        "type": "PermissionToken"
      }
    ]
  },
  "Domain": {
    "Struct": [
      {
        "name": "id",
        "type": "DomainId"
      },
      {
        "name": "accounts",
        "type": "SortedMap<AccountId, Account>"
      },
      {
        "name": "asset_definitions",
        "type": "SortedMap<AssetDefinitionId, AssetDefinition>"
      },
      {
        "name": "asset_total_quantities",
        "type": "SortedMap<AssetDefinitionId, NumericValue>"
      },
      {
        "name": "logo",
        "type": "Option<IpfsPath>"
      },
      {
        "name": "metadata",
        "type": "Metadata"
      }
    ]
  },
  "DomainEvent": {
    "Enum": [
      {
        "name": "Account",
        "type": "AccountEvent"
      },
      {
        "name": "AssetDefinition",
        "type": "AssetDefinitionEvent"
      },
      {
        "name": "Created",
        "type": "Domain"
      },
      {
        "name": "Deleted",
        "type": "DomainId"
      },
      {
        "name": "MetadataInserted",
        "type": "MetadataChanged<DomainId>"
      },
      {
        "name": "MetadataRemoved",
        "type": "MetadataChanged<DomainId>"
      }
    ]
  },
  "DomainEventFilter": {
    "Enum": [
      {
        "name": "ByCreated"
      },
      {
        "name": "ByDeleted"
      },
      {
        "name": "ByMetadataInserted"
      },
      {
        "name": "ByMetadataRemoved"
      },
      {
        "name": "ByAccount",
        "type": "FilterOpt<AccountFilter>"
      },
      {
        "name": "ByAssetDefinition",
        "type": "FilterOpt<AssetDefinitionFilter>"
      }
    ]
  },
  "DomainFilter": {
    "Struct": [
      {
        "name": "origin_filter",
        "type": "FilterOpt<OriginFilter<DomainEvent>>"
      },
      {
        "name": "event_filter",
        "type": "FilterOpt<DomainEventFilter>"
      }
    ]
  },
  "DomainId": {
    "Struct": [
      {
        "name": "name",
        "type": "Name"
      }
    ]
  },
  "Duration": {
    "Tuple": [
      "u64",
      "u32"
    ]
  },
  "Equal": {
    "Struct": [
      {
        "name": "left",
        "type": "EvaluatesTo<Value>"
      },
      {
        "name": "right",
        "type": "EvaluatesTo<Value>"
      }
    ]
  },
  "EvaluatesTo<AccountId>": {
    "Struct": [
      {
        "name": "expression",
        "type": "Expression"
      }
    ]
  },
  "EvaluatesTo<AssetDefinitionId>": {
    "Struct": [
      {
        "name": "expression",
        "type": "Expression"
      }
    ]
  },
  "EvaluatesTo<AssetId>": {
    "Struct": [
      {
        "name": "expression",
        "type": "Expression"
      }
    ]
  },
  "EvaluatesTo<Bool>": {
    "Struct": [
      {
        "name": "expression",
        "type": "Expression"
      }
    ]
  },
  "EvaluatesTo<DomainId>": {
    "Struct": [
      {
        "name": "expression",
        "type": "Expression"
      }
    ]
  },
  "EvaluatesTo<Hash>": {
    "Struct": [
      {
        "name": "expression",
        "type": "Expression"
      }
    ]
  },
  "EvaluatesTo<IdBox>": {
    "Struct": [
      {
        "name": "expression",
        "type": "Expression"
      }
    ]
  },
  "EvaluatesTo<Name>": {
    "Struct": [
      {
        "name": "expression",
        "type": "Expression"
      }
    ]
  },
  "EvaluatesTo<NumericValue>": {
    "Struct": [
      {
        "name": "expression",
        "type": "Expression"
      }
    ]
  },
  "EvaluatesTo<Parameter>": {
    "Struct": [
      {
        "name": "expression",
        "type": "Expression"
      }
    ]
  },
  "EvaluatesTo<RegistrableBox>": {
    "Struct": [
      {
        "name": "expression",
        "type": "Expression"
      }
    ]
  },
  "EvaluatesTo<RoleId>": {
    "Struct": [
      {
        "name": "expression",
        "type": "Expression"
      }
    ]
  },
  "EvaluatesTo<TriggerId>": {
    "Struct": [
      {
        "name": "expression",
        "type": "Expression"
      }
    ]
  },
  "EvaluatesTo<UpgradableBox>": {
    "Struct": [
      {
        "name": "expression",
        "type": "Expression"
      }
    ]
  },
  "EvaluatesTo<Value>": {
    "Struct": [
      {
        "name": "expression",
        "type": "Expression"
      }
    ]
  },
  "EvaluatesTo<Vec<Value>>": {
    "Struct": [
      {
        "name": "expression",
        "type": "Expression"
      }
    ]
  },
  "Event": {
    "Enum": [
      {
        "name": "Pipeline",
        "type": "PipelineEvent"
      },
      {
        "name": "Data",
        "type": "DataEvent"
      },
      {
        "name": "Time",
        "type": "TimeEvent"
      },
      {
        "name": "ExecuteTrigger",
        "type": "ExecuteTriggerEvent"
      }
    ]
  },
  "EventMessage": "Event",
  "EventSubscriptionRequest": "FilterBox",
  "Executable": {
    "Enum": [
      {
        "name": "Instructions",
        "type": "Vec<InstructionBox>"
      },
      {
        "name": "Wasm",
        "type": "WasmSmartContract"
      }
    ]
  },
  "ExecuteTriggerBox": {
    "Struct": [
      {
        "name": "trigger_id",
        "type": "EvaluatesTo<TriggerId>"
      }
    ]
  },
  "ExecuteTriggerEvent": {
    "Struct": [
      {
        "name": "trigger_id",
        "type": "TriggerId"
      },
      {
        "name": "authority",
        "type": "AccountId"
      }
    ]
  },
  "ExecuteTriggerEventFilter": {
    "Struct": [
      {
        "name": "trigger_id",
        "type": "TriggerId"
      },
      {
        "name": "authority",
        "type": "AccountId"
      }
    ]
  },
  "ExecutionTime": {
    "Enum": [
      {
        "name": "PreCommit"
      },
      {
        "name": "Schedule",
        "type": "Schedule"
      }
    ]
  },
  "Expression": {
    "Enum": [
      {
        "name": "Add",
        "type": "Add"
      },
      {
        "name": "Subtract",
        "type": "Subtract"
      },
      {
        "name": "Multiply",
        "type": "Multiply"
      },
      {
        "name": "Divide",
        "type": "Divide"
      },
      {
        "name": "Mod",
        "type": "Mod"
      },
      {
        "name": "RaiseTo",
        "type": "RaiseTo"
      },
      {
        "name": "Greater",
        "type": "Greater"
      },
      {
        "name": "Less",
        "type": "Less"
      },
      {
        "name": "Equal",
        "type": "Equal"
      },
      {
        "name": "Not",
        "type": "Not"
      },
      {
        "name": "And",
        "type": "And"
      },
      {
        "name": "Or",
        "type": "Or"
      },
      {
        "name": "If",
        "type": "If"
      },
      {
        "name": "Raw",
        "type": "Value"
      },
      {
        "name": "Query",
        "type": "QueryBox"
      },
      {
        "name": "Contains",
        "type": "Contains"
      },
      {
        "name": "ContainsAll",
        "type": "ContainsAll"
      },
      {
        "name": "ContainsAny",
        "type": "ContainsAny"
      },
      {
        "name": "Where",
        "type": "Where"
      },
      {
        "name": "ContextValue",
        "type": "ContextValue"
      }
    ]
  },
  "FailBox": {
    "Struct": [
      {
        "name": "message",
        "type": "String"
      }
    ]
  },
  "FilterBox": {
    "Enum": [
      {
        "name": "Pipeline",
        "type": "PipelineEventFilter"
      },
      {
        "name": "Data",
        "type": "FilterOpt<DataEntityFilter>"
      },
      {
        "name": "Time",
        "type": "TimeEventFilter"
      },
      {
        "name": "ExecuteTrigger",
        "type": "ExecuteTriggerEventFilter"
      }
    ]
  },
  "FilterOpt<AccountEventFilter>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "AccountEventFilter"
      }
    ]
  },
  "FilterOpt<AccountFilter>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "AccountFilter"
      }
    ]
  },
  "FilterOpt<AssetDefinitionEventFilter>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "AssetDefinitionEventFilter"
      }
    ]
  },
  "FilterOpt<AssetDefinitionFilter>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "AssetDefinitionFilter"
      }
    ]
  },
  "FilterOpt<AssetEventFilter>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "AssetEventFilter"
      }
    ]
  },
  "FilterOpt<AssetFilter>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "AssetFilter"
      }
    ]
  },
  "FilterOpt<DataEntityFilter>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "DataEntityFilter"
      }
    ]
  },
  "FilterOpt<DomainEventFilter>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "DomainEventFilter"
      }
    ]
  },
  "FilterOpt<DomainFilter>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "DomainFilter"
      }
    ]
  },
  "FilterOpt<OriginFilter<AccountEvent>>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "OriginFilter<AccountEvent>"
      }
    ]
  },
  "FilterOpt<OriginFilter<AssetDefinitionEvent>>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "OriginFilter<AssetDefinitionEvent>"
      }
    ]
  },
  "FilterOpt<OriginFilter<AssetEvent>>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "OriginFilter<AssetEvent>"
      }
    ]
  },
  "FilterOpt<OriginFilter<DomainEvent>>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "OriginFilter<DomainEvent>"
      }
    ]
  },
  "FilterOpt<OriginFilter<PeerEvent>>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "OriginFilter<PeerEvent>"
      }
    ]
  },
  "FilterOpt<OriginFilter<RoleEvent>>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "OriginFilter<RoleEvent>"
      }
    ]
  },
  "FilterOpt<OriginFilter<TriggerEvent>>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "OriginFilter<TriggerEvent>"
      }
    ]
  },
  "FilterOpt<PeerEventFilter>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "PeerEventFilter"
      }
    ]
  },
  "FilterOpt<PeerFilter>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "PeerFilter"
      }
    ]
  },
  "FilterOpt<RoleEventFilter>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "RoleEventFilter"
      }
    ]
  },
  "FilterOpt<RoleFilter>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "RoleFilter"
      }
    ]
  },
  "FilterOpt<TriggerEventFilter>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "TriggerEventFilter"
      }
    ]
  },
  "FilterOpt<TriggerFilter>": {
    "Enum": [
      {
        "name": "AcceptAll"
      },
      {
        "name": "BySome",
        "type": "TriggerFilter"
      }
    ]
  },
  "FindAccountById": {
    "Struct": [
      {
        "name": "id",
        "type": "EvaluatesTo<AccountId>"
      }
    ]
  },
  "FindAccountKeyValueByIdAndKey": {
    "Struct": [
      {
        "name": "id",
        "type": "EvaluatesTo<AccountId>"
      },
      {
        "name": "key",
        "type": "EvaluatesTo<Name>"
      }
    ]
  },
  "FindAccountsByDomainId": {
    "Struct": [
      {
        "name": "domain_id",
        "type": "EvaluatesTo<DomainId>"
      }
    ]
  },
  "FindAccountsByName": {
    "Struct": [
      {
        "name": "name",
        "type": "EvaluatesTo<Name>"
      }
    ]
  },
  "FindAccountsWithAsset": {
    "Struct": [
      {
        "name": "asset_definition_id",
        "type": "EvaluatesTo<AssetDefinitionId>"
      }
    ]
  },
  "FindAllAccounts": null,
  "FindAllActiveTriggerIds": null,
  "FindAllAssets": null,
  "FindAllAssetsDefinitions": null,
  "FindAllBlockHeaders": null,
  "FindAllBlocks": null,
  "FindAllDomains": null,
  "FindAllParameters": null,
  "FindAllPeers": null,
  "FindAllPermissionTokenDefinitions": null,
  "FindAllRoleIds": null,
  "FindAllRoles": null,
  "FindAllTransactions": null,
  "FindAssetById": {
    "Struct": [
      {
        "name": "id",
        "type": "EvaluatesTo<AssetId>"
      }
    ]
  },
  "FindAssetDefinitionById": {
    "Struct": [
      {
        "name": "id",
        "type": "EvaluatesTo<AssetDefinitionId>"
      }
    ]
  },
  "FindAssetDefinitionKeyValueByIdAndKey": {
    "Struct": [
      {
        "name": "id",
        "type": "EvaluatesTo<AssetDefinitionId>"
      },
      {
        "name": "key",
        "type": "EvaluatesTo<Name>"
      }
    ]
  },
  "FindAssetKeyValueByIdAndKey": {
    "Struct": [
      {
        "name": "id",
        "type": "EvaluatesTo<AssetId>"
      },
      {
        "name": "key",
        "type": "EvaluatesTo<Name>"
      }
    ]
  },
  "FindAssetQuantityById": {
    "Struct": [
      {
        "name": "id",
        "type": "EvaluatesTo<AssetId>"
      }
    ]
  },
  "FindAssetsByAccountId": {
    "Struct": [
      {
        "name": "account_id",
        "type": "EvaluatesTo<AccountId>"
      }
    ]
  },
  "FindAssetsByAssetDefinitionId": {
    "Struct": [
      {
        "name": "asset_definition_id",
        "type": "EvaluatesTo<AssetDefinitionId>"
      }
    ]
  },
  "FindAssetsByDomainId": {
    "Struct": [
      {
        "name": "domain_id",
        "type": "EvaluatesTo<DomainId>"
      }
    ]
  },
  "FindAssetsByDomainIdAndAssetDefinitionId": {
    "Struct": [
      {
        "name": "domain_id",
        "type": "EvaluatesTo<DomainId>"
      },
      {
        "name": "asset_definition_id",
        "type": "EvaluatesTo<AssetDefinitionId>"
      }
    ]
  },
  "FindAssetsByName": {
    "Struct": [
      {
        "name": "name",
        "type": "EvaluatesTo<Name>"
      }
    ]
  },
  "FindBlockHeaderByHash": {
    "Struct": [
      {
        "name": "hash",
        "type": "EvaluatesTo<Hash>"
      }
    ]
  },
  "FindDomainById": {
    "Struct": [
      {
        "name": "id",
        "type": "EvaluatesTo<DomainId>"
      }
    ]
  },
  "FindDomainKeyValueByIdAndKey": {
    "Struct": [
      {
        "name": "id",
        "type": "EvaluatesTo<DomainId>"
      },
      {
        "name": "key",
        "type": "EvaluatesTo<Name>"
      }
    ]
  },
  "FindError": {
    "Enum": [
      {
        "name": "Asset",
        "type": "AssetId"
      },
      {
        "name": "AssetDefinition",
        "type": "AssetDefinitionId"
      },
      {
        "name": "Account",
        "type": "AccountId"
      },
      {
        "name": "Domain",
        "type": "DomainId"
      },
      {
        "name": "MetadataKey",
        "type": "Name"
      },
      {
        "name": "Block",
        "type": "HashOf<VersionedCommittedBlock>"
      },
      {
        "name": "Transaction",
        "type": "HashOf<VersionedSignedTransaction>"
      },
      {
        "name": "Peer",
        "type": "PeerId"
      },
      {
        "name": "Trigger",
        "type": "TriggerId"
      },
      {
        "name": "Role",
        "type": "RoleId"
      },
      {
        "name": "PermissionTokenDefinition",
        "type": "PermissionTokenId"
      },
      {
        "name": "Parameter",
        "type": "ParameterId"
      }
    ]
  },
  "FindPermissionTokensByAccountId": {
    "Struct": [
      {
        "name": "id",
        "type": "EvaluatesTo<AccountId>"
      }
    ]
  },
  "FindRoleByRoleId": {
    "Struct": [
      {
        "name": "id",
        "type": "EvaluatesTo<RoleId>"
      }
    ]
  },
  "FindRolesByAccountId": {
    "Struct": [
      {
        "name": "id",
        "type": "EvaluatesTo<AccountId>"
      }
    ]
  },
  "FindTotalAssetQuantityByAssetDefinitionId": {
    "Struct": [
      {
        "name": "id",
        "type": "EvaluatesTo<AssetDefinitionId>"
      }
    ]
  },
  "FindTransactionByHash": {
    "Struct": [
      {
        "name": "hash",
        "type": "EvaluatesTo<Hash>"
      }
    ]
  },
  "FindTransactionsByAccountId": {
    "Struct": [
      {
        "name": "account_id",
        "type": "EvaluatesTo<AccountId>"
      }
    ]
  },
  "FindTriggerById": {
    "Struct": [
      {
        "name": "id",
        "type": "EvaluatesTo<TriggerId>"
      }
    ]
  },
  "FindTriggerKeyValueByIdAndKey": {
    "Struct": [
      {
        "name": "id",
        "type": "EvaluatesTo<TriggerId>"
      },
      {
        "name": "key",
        "type": "EvaluatesTo<Name>"
      }
    ]
  },
  "FindTriggersByDomainId": {
    "Struct": [
      {
        "name": "domain_id",
        "type": "EvaluatesTo<DomainId>"
      }
    ]
  },
  "Fixed": "FixedPoint<i64>",
  "FixedPoint<i64>": {
    "FixedPoint": {
      "base": "i64",
      "decimal_places": 9
    }
  },
  "GenericPredicateBox<ValuePredicate>": {
    "Enum": [
      {
        "name": "And",
        "type": "NonTrivial<GenericPredicateBox<ValuePredicate>>"
      },
      {
        "name": "Or",
        "type": "NonTrivial<GenericPredicateBox<ValuePredicate>>"
      },
      {
        "name": "Not",
        "type": "GenericPredicateBox<ValuePredicate>"
      },
      {
        "name": "Raw",
        "type": "ValuePredicate"
      }
    ]
  },
  "GenesisTransaction": {
    "Struct": [
      {
        "name": "isi",
        "type": "Vec<InstructionBox>"
      }
    ]
  },
  "GrantBox": {
    "Struct": [
      {
        "name": "object",
        "type": "EvaluatesTo<Value>"
      },
      {
        "name": "destination_id",
        "type": "EvaluatesTo<IdBox>"
      }
    ]
  },
  "Greater": {
    "Struct": [
      {
        "name": "left",
        "type": "EvaluatesTo<NumericValue>"
      },
      {
        "name": "right",
        "type": "EvaluatesTo<NumericValue>"
      }
    ]
  },
  "Hash": "Array<u8, 32>",
  "HashOf<MerkleTree<VersionedSignedTransaction>>": "Hash",
  "HashOf<VersionedCommittedBlock>": "Hash",
  "HashOf<VersionedSignedTransaction>": "Hash",
  "IdBox": {
    "Enum": [
      {
        "name": "DomainId",
        "type": "DomainId"
      },
      {
        "name": "AccountId",
        "type": "AccountId"
      },
      {
        "name": "AssetDefinitionId",
        "type": "AssetDefinitionId"
      },
      {
        "name": "AssetId",
        "type": "AssetId"
      },
      {
        "name": "PeerId",
        "type": "PeerId"
      },
      {
        "name": "TriggerId",
        "type": "TriggerId"
      },
      {
        "name": "RoleId",
        "type": "RoleId"
      },
      {
        "name": "PermissionTokenDefinitionId",
        "type": "PermissionTokenId"
      },
      {
        "name": "ParameterId",
        "type": "ParameterId"
      }
    ]
  },
  "IdentifiableBox": {
    "Enum": [
      {
        "name": "NewDomain",
        "type": "NewDomain"
      },
      {
        "name": "NewAccount",
        "type": "NewAccount"
      },
      {
        "name": "NewAssetDefinition",
        "type": "NewAssetDefinition"
      },
      {
        "name": "NewRole",
        "type": "NewRole"
      },
      {
        "name": "Peer",
        "type": "Peer"
      },
      {
        "name": "Domain",
        "type": "Domain"
      },
      {
        "name": "Account",
        "type": "Account"
      },
      {
        "name": "AssetDefinition",
        "type": "AssetDefinition"
      },
      {
        "name": "Asset",
        "type": "Asset"
      },
      {
        "name": "Trigger",
        "type": "TriggerBox"
      },
      {
        "name": "Role",
        "type": "Role"
      },
      {
        "name": "PermissionTokenDefinition",
        "type": "PermissionTokenDefinition"
      },
      {
        "name": "Parameter",
        "type": "Parameter"
      }
    ]
  },
  "If": {
    "Struct": [
      {
        "name": "condition",
        "type": "EvaluatesTo<Bool>"
      },
      {
        "name": "then",
        "type": "EvaluatesTo<Value>"
      },
      {
        "name": "otherwise",
        "type": "EvaluatesTo<Value>"
      }
    ]
  },
  "InstructionBox": {
    "Enum": [
      {
        "name": "Register",
        "type": "RegisterBox"
      },
      {
        "name": "Unregister",
        "type": "UnregisterBox"
      },
      {
        "name": "Mint",
        "type": "MintBox"
      },
      {
        "name": "Burn",
        "type": "BurnBox"
      },
      {
        "name": "Transfer",
        "type": "TransferBox"
      },
      {
        "name": "If",
        "type": "Conditional"
      },
      {
        "name": "Pair",
        "type": "Pair"
      },
      {
        "name": "Sequence",
        "type": "SequenceBox"
      },
      {
        "name": "Fail",
        "type": "FailBox"
      },
      {
        "name": "SetKeyValue",
        "type": "SetKeyValueBox"
      },
      {
        "name": "RemoveKeyValue",
        "type": "RemoveKeyValueBox"
      },
      {
        "name": "Grant",
        "type": "GrantBox"
      },
      {
        "name": "Revoke",
        "type": "RevokeBox"
      },
      {
        "name": "ExecuteTrigger",
        "type": "ExecuteTriggerBox"
      },
      {
        "name": "SetParameter",
        "type": "SetParameterBox"
      },
      {
        "name": "NewParameter",
        "type": "NewParameterBox"
      },
      {
        "name": "Upgrade",
        "type": "UpgradeBox"
      }
    ]
  },
  "InstructionExecutionFail": {
    "Struct": [
      {
        "name": "instruction",
        "type": "InstructionBox"
      },
      {
        "name": "reason",
        "type": "String"
      }
    ]
  },
  "Interval<u16>": {
    "Struct": [
      {
        "name": "start",
        "type": "u16"
      },
      {
        "name": "limit",
        "type": "u16"
      }
    ]
  },
  "Interval<u8>": {
    "Struct": [
      {
        "name": "start",
        "type": "u8"
      },
      {
        "name": "limit",
        "type": "u8"
      }
    ]
  },
  "IpfsPath": "String",
  "Ipv4Addr": "Array<u8, 4>",
  "Ipv4Predicate": "Array<Interval<u8>, 4>",
  "Ipv6Addr": "Array<u16, 8>",
  "Ipv6Predicate": "Array<Interval<u16>, 8>",
  "IsAssetDefinitionOwner": {
    "Struct": [
      {
        "name": "asset_definition_id",
        "type": "EvaluatesTo<AssetDefinitionId>"
      },
      {
        "name": "account_id",
        "type": "EvaluatesTo<AccountId>"
      }
    ]
  },
  "LengthLimits": {
    "Struct": [
      {
        "name": "min",
        "type": "u32"
      },
      {
        "name": "max",
        "type": "u32"
      }
    ]
  },
  "Less": {
    "Struct": [
      {
        "name": "left",
        "type": "EvaluatesTo<NumericValue>"
      },
      {
        "name": "right",
        "type": "EvaluatesTo<NumericValue>"
      }
    ]
  },
  "Limits": {
    "Struct": [
      {
        "name": "max_len",
        "type": "u32"
      },
      {
        "name": "max_entry_byte_size",
        "type": "u32"
      }
    ]
  },
  "Metadata": {
    "Struct": [
      {
        "name": "map",
        "type": "SortedMap<Name, Value>"
      }
    ]
  },
  "MetadataChanged<AccountId>": {
    "Struct": [
      {
        "name": "target_id",
        "type": "AccountId"
      },
      {
        "name": "key",
        "type": "Name"
      },
      {
        "name": "value",
        "type": "Value"
      }
    ]
  },
  "MetadataChanged<AssetDefinitionId>": {
    "Struct": [
      {
        "name": "target_id",
        "type": "AssetDefinitionId"
      },
      {
        "name": "key",
        "type": "Name"
      },
      {
        "name": "value",
        "type": "Value"
      }
    ]
  },
  "MetadataChanged<AssetId>": {
    "Struct": [
      {
        "name": "target_id",
        "type": "AssetId"
      },
      {
        "name": "key",
        "type": "Name"
      },
      {
        "name": "value",
        "type": "Value"
      }
    ]
  },
  "MetadataChanged<DomainId>": {
    "Struct": [
      {
        "name": "target_id",
        "type": "DomainId"
      },
      {
        "name": "key",
        "type": "Name"
      },
      {
        "name": "value",
        "type": "Value"
      }
    ]
  },
  "MintBox": {
    "Struct": [
      {
        "name": "object",
        "type": "EvaluatesTo<Value>"
      },
      {
        "name": "destination_id",
        "type": "EvaluatesTo<IdBox>"
      }
    ]
  },
  "Mintable": {
    "Enum": [
      {
        "name": "Infinitely"
      },
      {
        "name": "Once"
      },
      {
        "name": "Not"
      }
    ]
  },
  "Mod": {
    "Struct": [
      {
        "name": "left",
        "type": "EvaluatesTo<NumericValue>"
      },
      {
        "name": "right",
        "type": "EvaluatesTo<NumericValue>"
      }
    ]
  },
  "Multiply": {
    "Struct": [
      {
        "name": "left",
        "type": "EvaluatesTo<NumericValue>"
      },
      {
        "name": "right",
        "type": "EvaluatesTo<NumericValue>"
      }
    ]
  },
  "Name": "String",
  "NewAccount": {
    "Struct": [
      {
        "name": "id",
        "type": "AccountId"
      },
      {
        "name": "signatories",
        "type": "SortedVec<PublicKey>"
      },
      {
        "name": "metadata",
        "type": "Metadata"
      }
    ]
  },
  "NewAssetDefinition": {
    "Struct": [
      {
        "name": "id",
        "type": "AssetDefinitionId"
      },
      {
        "name": "value_type",
        "type": "AssetValueType"
      },
      {
        "name": "mintable",
        "type": "Mintable"
      },
      {
        "name": "logo",
        "type": "Option<IpfsPath>"
      },
      {
        "name": "metadata",
        "type": "Metadata"
      }
    ]
  },
  "NewDomain": {
    "Struct": [
      {
        "name": "id",
        "type": "DomainId"
      },
      {
        "name": "logo",
        "type": "Option<IpfsPath>"
      },
      {
        "name": "metadata",
        "type": "Metadata"
      }
    ]
  },
  "NewParameterBox": {
    "Struct": [
      {
        "name": "parameter",
        "type": "EvaluatesTo<Parameter>"
      }
    ]
  },
  "NewRole": {
    "Struct": [
      {
        "name": "inner",
        "type": "Role"
      }
    ]
  },
  "NonTrivial<GenericPredicateBox<ValuePredicate>>": "Vec<GenericPredicateBox<ValuePredicate>>",
  "Not": {
    "Struct": [
      {
        "name": "expression",
        "type": "EvaluatesTo<Bool>"
      }
    ]
  },
  "NotPermittedFail": {
    "Struct": [
      {
        "name": "reason",
        "type": "String"
      }
    ]
  },
  "NumericValue": {
    "Enum": [
      {
        "name": "U32",
        "type": "u32"
      },
      {
        "name": "U64",
        "type": "u64"
      },
      {
        "name": "U128",
        "type": "u128"
      },
      {
        "name": "Fixed",
        "type": "Fixed"
      }
    ]
  },
  "OptimizedExecutable": {
    "Enum": [
      {
        "name": "WasmInternalRepr",
        "type": "Vec<u8>"
      },
      {
        "name": "Instructions",
        "type": "Vec<InstructionBox>"
      }
    ]
  },
  "Option<DomainId>": {
    "Option": "DomainId"
  },
  "Option<Duration>": {
    "Option": "Duration"
  },
  "Option<Hash>": {
    "Option": "Hash"
  },
  "Option<HashOf<MerkleTree<VersionedSignedTransaction>>>": {
    "Option": "HashOf<MerkleTree<VersionedSignedTransaction>>"
  },
  "Option<HashOf<VersionedCommittedBlock>>": {
    "Option": "HashOf<VersionedCommittedBlock>"
  },
  "Option<InstructionBox>": {
    "Option": "InstructionBox"
  },
  "Option<IpfsPath>": {
    "Option": "IpfsPath"
  },
  "Option<Name>": {
    "Option": "Name"
  },
  "Option<PipelineEntityKind>": {
    "Option": "PipelineEntityKind"
  },
  "Option<PipelineStatusKind>": {
    "Option": "PipelineStatusKind"
  },
  "Option<TimeInterval>": {
    "Option": "TimeInterval"
  },
  "Option<u32>": {
    "Option": "u32"
  },
  "Or": {
    "Struct": [
      {
        "name": "left",
        "type": "EvaluatesTo<Bool>"
      },
      {
        "name": "right",
        "type": "EvaluatesTo<Bool>"
      }
    ]
  },
  "OriginFilter<AccountEvent>": "AccountId",
  "OriginFilter<AssetDefinitionEvent>": "AssetDefinitionId",
  "OriginFilter<AssetEvent>": "AssetId",
  "OriginFilter<DomainEvent>": "DomainId",
  "OriginFilter<PeerEvent>": "PeerId",
  "OriginFilter<RoleEvent>": "RoleId",
  "OriginFilter<TriggerEvent>": "TriggerId",
  "PaginatedQueryResult": {
    "Struct": [
      {
        "name": "result",
        "type": "QueryResult"
      },
      {
        "name": "filter",
        "type": "GenericPredicateBox<ValuePredicate>"
      },
      {
        "name": "pagination",
        "type": "Pagination"
      },
      {
        "name": "sorting",
        "type": "Sorting"
      },
      {
        "name": "total",
        "type": "u64"
      }
    ]
  },
  "Pagination": {
    "Struct": [
      {
        "name": "start",
        "type": "Option<u32>"
      },
      {
        "name": "limit",
        "type": "Option<u32>"
      }
    ]
  },
  "Pair": {
    "Struct": [
      {
        "name": "left_instruction",
        "type": "InstructionBox"
      },
      {
        "name": "right_instruction",
        "type": "InstructionBox"
      }
    ]
  },
  "Parameter": {
    "Struct": [
      {
        "name": "id",
        "type": "ParameterId"
      },
      {
        "name": "val",
        "type": "Value"
      }
    ]
  },
  "ParameterId": {
    "Struct": [
      {
        "name": "name",
        "type": "Name"
      }
    ]
  },
  "Peer": {
    "Struct": [
      {
        "name": "id",
        "type": "PeerId"
      }
    ]
  },
  "PeerEvent": {
    "Enum": [
      {
        "name": "Added",
        "type": "PeerId"
      },
      {
        "name": "Removed",
        "type": "PeerId"
      }
    ]
  },
  "PeerEventFilter": {
    "Enum": [
      {
        "name": "ByAdded"
      },
      {
        "name": "ByRemoved"
      }
    ]
  },
  "PeerFilter": {
    "Struct": [
      {
        "name": "origin_filter",
        "type": "FilterOpt<OriginFilter<PeerEvent>>"
      },
      {
        "name": "event_filter",
        "type": "FilterOpt<PeerEventFilter>"
      }
    ]
  },
  "PeerId": {
    "Struct": [
      {
        "name": "address",
        "type": "String"
      },
      {
        "name": "public_key",
        "type": "PublicKey"
      }
    ]
  },
  "PendingTransactions": "Vec<SignedTransaction>",
  "PermissionRemoved": {
    "Struct": [
      {
        "name": "role_id",
        "type": "RoleId"
      },
      {
        "name": "permission_definition_id",
        "type": "PermissionTokenId"
      }
    ]
  },
  "PermissionToken": {
    "Struct": [
      {
        "name": "definition_id",
        "type": "PermissionTokenId"
      },
      {
        "name": "params",
        "type": "SortedMap<Name, Value>"
      }
    ]
  },
  "PermissionTokenDefinition": {
    "Struct": [
      {
        "name": "id",
        "type": "PermissionTokenId"
      },
      {
        "name": "params",
        "type": "SortedMap<Name, ValueKind>"
      }
    ]
  },
  "PermissionTokenEvent": {
    "Enum": [
      {
        "name": "DefinitionCreated",
        "type": "PermissionTokenDefinition"
      },
      {
        "name": "DefinitionDeleted",
        "type": "PermissionTokenDefinition"
      }
    ]
  },
  "PermissionTokenId": {
    "Struct": [
      {
        "name": "name",
        "type": "Name"
      }
    ]
  },
  "PipelineEntityKind": {
    "Enum": [
      {
        "name": "Block"
      },
      {
        "name": "Transaction"
      }
    ]
  },
  "PipelineEvent": {
    "Struct": [
      {
        "name": "entity_kind",
        "type": "PipelineEntityKind"
      },
      {
        "name": "status",
        "type": "PipelineStatus"
      },
      {
        "name": "hash",
        "type": "Hash"
      }
    ]
  },
  "PipelineEventFilter": {
    "Struct": [
      {
        "name": "entity_kind",
        "type": "Option<PipelineEntityKind>"
      },
      {
        "name": "status_kind",
        "type": "Option<PipelineStatusKind>"
      },
      {
        "name": "hash",
        "type": "Option<Hash>"
      }
    ]
  },
  "PipelineRejectionReason": {
    "Enum": [
      {
        "name": "Block",
        "type": "BlockRejectionReason"
      },
      {
        "name": "Transaction",
        "type": "TransactionRejectionReason"
      }
    ]
  },
  "PipelineStatus": {
    "Enum": [
      {
        "name": "Validating"
      },
      {
        "name": "Rejected",
        "type": "PipelineRejectionReason"
      },
      {
        "name": "Committed"
      }
    ]
  },
  "PipelineStatusKind": {
    "Enum": [
      {
        "name": "Validating"
      },
      {
        "name": "Rejected"
      },
      {
        "name": "Committed"
      }
    ]
  },
  "PublicKey": {
    "Struct": [
      {
        "name": "digest_function",
        "type": "Algorithm"
      },
      {
        "name": "payload",
        "type": "Vec<u8>"
      }
    ]
  },
  "QueryBox": {
    "Enum": [
      {
        "name": "FindAllAccounts",
        "type": "FindAllAccounts"
      },
      {
        "name": "FindAccountById",
        "type": "FindAccountById"
      },
      {
        "name": "FindAccountKeyValueByIdAndKey",
        "type": "FindAccountKeyValueByIdAndKey"
      },
      {
        "name": "FindAccountsByName",
        "type": "FindAccountsByName"
      },
      {
        "name": "FindAccountsByDomainId",
        "type": "FindAccountsByDomainId"
      },
      {
        "name": "FindAccountsWithAsset",
        "type": "FindAccountsWithAsset"
      },
      {
        "name": "FindAllAssets",
        "type": "FindAllAssets"
      },
      {
        "name": "FindAllAssetsDefinitions",
        "type": "FindAllAssetsDefinitions"
      },
      {
        "name": "FindAssetById",
        "type": "FindAssetById"
      },
      {
        "name": "FindAssetDefinitionById",
        "type": "FindAssetDefinitionById"
      },
      {
        "name": "FindAssetsByName",
        "type": "FindAssetsByName"
      },
      {
        "name": "FindAssetsByAccountId",
        "type": "FindAssetsByAccountId"
      },
      {
        "name": "FindAssetsByAssetDefinitionId",
        "type": "FindAssetsByAssetDefinitionId"
      },
      {
        "name": "FindAssetsByDomainId",
        "type": "FindAssetsByDomainId"
      },
      {
        "name": "FindAssetsByDomainIdAndAssetDefinitionId",
        "type": "FindAssetsByDomainIdAndAssetDefinitionId"
      },
      {
        "name": "FindAssetQuantityById",
        "type": "FindAssetQuantityById"
      },
      {
        "name": "FindTotalAssetQuantityByAssetDefinitionId",
        "type": "FindTotalAssetQuantityByAssetDefinitionId"
      },
      {
        "name": "IsAssetDefinitionOwner",
        "type": "IsAssetDefinitionOwner"
      },
      {
        "name": "FindAssetKeyValueByIdAndKey",
        "type": "FindAssetKeyValueByIdAndKey"
      },
      {
        "name": "FindAssetDefinitionKeyValueByIdAndKey",
        "type": "FindAssetDefinitionKeyValueByIdAndKey"
      },
      {
        "name": "FindAllDomains",
        "type": "FindAllDomains"
      },
      {
        "name": "FindDomainById",
        "type": "FindDomainById"
      },
      {
        "name": "FindDomainKeyValueByIdAndKey",
        "type": "FindDomainKeyValueByIdAndKey"
      },
      {
        "name": "FindAllPeers",
        "type": "FindAllPeers"
      },
      {
        "name": "FindAllBlocks",
        "type": "FindAllBlocks"
      },
      {
        "name": "FindAllBlockHeaders",
        "type": "FindAllBlockHeaders"
      },
      {
        "name": "FindBlockHeaderByHash",
        "type": "FindBlockHeaderByHash"
      },
      {
        "name": "FindAllTransactions",
        "type": "FindAllTransactions"
      },
      {
        "name": "FindTransactionsByAccountId",
        "type": "FindTransactionsByAccountId"
      },
      {
        "name": "FindTransactionByHash",
        "type": "FindTransactionByHash"
      },
      {
        "name": "FindPermissionTokensByAccountId",
        "type": "FindPermissionTokensByAccountId"
      },
      {
        "name": "FindAllPermissionTokenDefinitions",
        "type": "FindAllPermissionTokenDefinitions"
      },
      {
        "name": "DoesAccountHavePermissionToken",
        "type": "DoesAccountHavePermissionToken"
      },
      {
        "name": "FindAllActiveTriggerIds",
        "type": "FindAllActiveTriggerIds"
      },
      {
        "name": "FindTriggerById",
        "type": "FindTriggerById"
      },
      {
        "name": "FindTriggerKeyValueByIdAndKey",
        "type": "FindTriggerKeyValueByIdAndKey"
      },
      {
        "name": "FindTriggersByDomainId",
        "type": "FindTriggersByDomainId"
      },
      {
        "name": "FindAllRoles",
        "type": "FindAllRoles"
      },
      {
        "name": "FindAllRoleIds",
        "type": "FindAllRoleIds"
      },
      {
        "name": "FindRoleByRoleId",
        "type": "FindRoleByRoleId"
      },
      {
        "name": "FindRolesByAccountId",
        "type": "FindRolesByAccountId"
      },
      {
        "name": "FindAllParameters",
        "type": "FindAllParameters"
      }
    ]
  },
  "QueryExecutionFailure": {
    "Enum": [
      {
        "name": "Signature",
        "type": "String"
      },
      {
        "name": "Permission",
        "type": "String"
      },
      {
        "name": "Evaluate",
        "type": "String"
      },
      {
        "name": "Find",
        "type": "FindError"
      },
      {
        "name": "Conversion",
        "type": "String"
      },
      {
        "name": "Unauthorized"
      }
    ]
  },
  "QueryPayload": {
    "Struct": [
      {
        "name": "timestamp_ms",
        "type": "Compact<u128>"
      },
      {
        "name": "query",
        "type": "QueryBox"
      },
      {
        "name": "account_id",
        "type": "AccountId"
      },
      {
        "name": "filter",
        "type": "GenericPredicateBox<ValuePredicate>"
      }
    ]
  },
  "QueryResult": "Value",
  "RaiseTo": {
    "Struct": [
      {
        "name": "left",
        "type": "EvaluatesTo<NumericValue>"
      },
      {
        "name": "right",
        "type": "EvaluatesTo<NumericValue>"
      }
    ]
  },
  "RawGenesisBlock": {
    "Struct": [
      {
        "name": "transactions",
        "type": "Vec<GenesisTransaction>"
      },
      {
        "name": "validator",
        "type": "ValidatorMode"
      }
    ]
  },
  "RegisterBox": {
    "Struct": [
      {
        "name": "object",
        "type": "EvaluatesTo<RegistrableBox>"
      }
    ]
  },
  "RejectedTransaction": {
    "Struct": [
      {
        "name": "payload",
        "type": "TransactionPayload"
      },
      {
        "name": "signatures",
        "type": "SignaturesOf<TransactionPayload>"
      },
      {
        "name": "rejection_reason",
        "type": "TransactionRejectionReason"
      }
    ]
  },
  "RemoveKeyValueBox": {
    "Struct": [
      {
        "name": "object_id",
        "type": "EvaluatesTo<IdBox>"
      },
      {
        "name": "key",
        "type": "EvaluatesTo<Name>"
      }
    ]
  },
  "Repeats": {
    "Enum": [
      {
        "name": "Indefinitely"
      },
      {
        "name": "Exactly",
        "type": "u32"
      }
    ]
  },
  "RevokeBox": {
    "Struct": [
      {
        "name": "object",
        "type": "EvaluatesTo<Value>"
      },
      {
        "name": "destination_id",
        "type": "EvaluatesTo<IdBox>"
      }
    ]
  },
  "Role": {
    "Struct": [
      {
        "name": "id",
        "type": "RoleId"
      },
      {
        "name": "permissions",
        "type": "SortedVec<PermissionToken>"
      }
    ]
  },
  "RoleEvent": {
    "Enum": [
      {
        "name": "Created",
        "type": "Role"
      },
      {
        "name": "Deleted",
        "type": "RoleId"
      },
      {
        "name": "PermissionRemoved",
        "type": "PermissionRemoved"
      }
    ]
  },
  "RoleEventFilter": {
    "Enum": [
      {
        "name": "ByCreated"
      },
      {
        "name": "ByDeleted"
      },
      {
        "name": "ByPermissionRemoved"
      }
    ]
  },
  "RoleFilter": {
    "Struct": [
      {
        "name": "origin_filter",
        "type": "FilterOpt<OriginFilter<RoleEvent>>"
      },
      {
        "name": "event_filter",
        "type": "FilterOpt<RoleEventFilter>"
      }
    ]
  },
  "RoleId": {
    "Struct": [
      {
        "name": "name",
        "type": "Name"
      }
    ]
  },
  "Schedule": {
    "Struct": [
      {
        "name": "start",
        "type": "Duration"
      },
      {
        "name": "period",
        "type": "Option<Duration>"
      }
    ]
  },
  "SemiInterval<Fixed>": {
    "Struct": [
      {
        "name": "start",
        "type": "Fixed"
      },
      {
        "name": "limit",
        "type": "Fixed"
      }
    ]
  },
  "SemiInterval<u128>": {
    "Struct": [
      {
        "name": "start",
        "type": "u128"
      },
      {
        "name": "limit",
        "type": "u128"
      }
    ]
  },
  "SemiInterval<u32>": {
    "Struct": [
      {
        "name": "start",
        "type": "u32"
      },
      {
        "name": "limit",
        "type": "u32"
      }
    ]
  },
  "SemiRange": {
    "Enum": [
      {
        "name": "U32",
        "type": "SemiInterval<u32>"
      },
      {
        "name": "U128",
        "type": "SemiInterval<u128>"
      },
      {
        "name": "Fixed",
        "type": "SemiInterval<Fixed>"
      }
    ]
  },
  "SequenceBox": {
    "Struct": [
      {
        "name": "instructions",
        "type": "Vec<InstructionBox>"
      }
    ]
  },
  "SetKeyValueBox": {
    "Struct": [
      {
        "name": "object_id",
        "type": "EvaluatesTo<IdBox>"
      },
      {
        "name": "key",
        "type": "EvaluatesTo<Name>"
      },
      {
        "name": "value",
        "type": "EvaluatesTo<Value>"
      }
    ]
  },
  "SetParameterBox": {
    "Struct": [
      {
        "name": "parameter",
        "type": "EvaluatesTo<Parameter>"
      }
    ]
  },
  "Signature": {
    "Struct": [
      {
        "name": "public_key",
        "type": "PublicKey"
      },
      {
        "name": "payload",
        "type": "Vec<u8>"
      }
    ]
  },
  "SignatureCheckCondition": "EvaluatesTo<Bool>",
  "SignatureOf<CommittedBlock>": "Signature",
  "SignatureOf<QueryPayload>": "Signature",
  "SignatureOf<TransactionPayload>": "Signature",
  "SignaturesOf<CommittedBlock>": {
    "Struct": [
      {
        "name": "signatures",
        "type": "SortedVec<SignatureOf<CommittedBlock>>"
      }
    ]
  },
  "SignaturesOf<TransactionPayload>": {
    "Struct": [
      {
        "name": "signatures",
        "type": "SortedVec<SignatureOf<TransactionPayload>>"
      }
    ]
  },
  "SignedQuery": {
    "Struct": [
      {
        "name": "payload",
        "type": "QueryPayload"
      },
      {
        "name": "signature",
        "type": "SignatureOf<QueryPayload>"
      }
    ]
  },
  "SignedTransaction": {
    "Struct": [
      {
        "name": "payload",
        "type": "TransactionPayload"
      },
      {
        "name": "signatures",
        "type": "SortedVec<SignatureOf<TransactionPayload>>"
      }
    ]
  },
  "SortedMap<AccountId, Account>": {
    "Map": {
      "key": "AccountId",
      "value": "Account"
    }
  },
  "SortedMap<AssetDefinitionId, AssetDefinition>": {
    "Map": {
      "key": "AssetDefinitionId",
      "value": "AssetDefinition"
    }
  },
  "SortedMap<AssetDefinitionId, NumericValue>": {
    "Map": {
      "key": "AssetDefinitionId",
      "value": "NumericValue"
    }
  },
  "SortedMap<AssetId, Asset>": {
    "Map": {
      "key": "AssetId",
      "value": "Asset"
    }
  },
  "SortedMap<Name, EvaluatesTo<Value>>": {
    "Map": {
      "key": "Name",
      "value": "EvaluatesTo<Value>"
    }
  },
  "SortedMap<Name, Value>": {
    "Map": {
      "key": "Name",
      "value": "Value"
    }
  },
  "SortedMap<Name, ValueKind>": {
    "Map": {
      "key": "Name",
      "value": "ValueKind"
    }
  },
  "SortedVec<PermissionToken>": {
    "Vec": "PermissionToken"
  },
  "SortedVec<PublicKey>": {
    "Vec": "PublicKey"
  },
  "SortedVec<RoleId>": {
    "Vec": "RoleId"
  },
  "SortedVec<SignatureOf<CommittedBlock>>": {
    "Vec": "SignatureOf<CommittedBlock>"
  },
  "SortedVec<SignatureOf<TransactionPayload>>": {
    "Vec": "SignatureOf<TransactionPayload>"
  },
  "Sorting": {
    "Struct": [
      {
        "name": "sort_by_metadata_key",
        "type": "Option<Name>"
      }
    ]
  },
  "String": "String",
  "StringPredicate": {
    "Enum": [
      {
        "name": "Contains",
        "type": "String"
      },
      {
        "name": "StartsWith",
        "type": "String"
      },
      {
        "name": "EndsWith",
        "type": "String"
      },
      {
        "name": "Is",
        "type": "String"
      }
    ]
  },
  "Subtract": {
    "Struct": [
      {
        "name": "left",
        "type": "EvaluatesTo<NumericValue>"
      },
      {
        "name": "right",
        "type": "EvaluatesTo<NumericValue>"
      }
    ]
  },
  "TimeEvent": {
    "Struct": [
      {
        "name": "prev_interval",
        "type": "Option<TimeInterval>"
      },
      {
        "name": "interval",
        "type": "TimeInterval"
      }
    ]
  },
  "TimeEventFilter": "ExecutionTime",
  "TimeInterval": {
    "Struct": [
      {
        "name": "since",
        "type": "Duration"
      },
      {
        "name": "length",
        "type": "Duration"
      }
    ]
  },
  "TransactionExpired": {
    "Struct": [
      {
        "name": "time_to_live_ms",
        "type": "u64"
      }
    ]
  },
  "TransactionLimitError": {
    "Struct": [
      {
        "name": "reason",
        "type": "String"
      }
    ]
  },
  "TransactionLimits": {
    "Struct": [
      {
        "name": "max_instruction_number",
        "type": "u64"
      },
      {
        "name": "max_wasm_size_bytes",
        "type": "u64"
      }
    ]
  },
  "TransactionPayload": {
    "Struct": [
      {
        "name": "account_id",
        "type": "AccountId"
      },
      {
        "name": "instructions",
        "type": "Executable"
      },
      {
        "name": "creation_time",
        "type": "u64"
      },
      {
        "name": "time_to_live_ms",
        "type": "u64"
      },
      {
        "name": "nonce",
        "type": "Option<u32>"
      },
      {
        "name": "metadata",
        "type": "SortedMap<Name, Value>"
      }
    ]
  },
  "TransactionQueryResult": {
    "Struct": [
      {
        "name": "tx_value",
        "type": "TransactionValue"
      },
      {
        "name": "block_hash",
        "type": "Hash"
      }
    ]
  },
  "TransactionRejectionReason": {
    "Enum": [
      {
        "name": "LimitCheck",
        "type": "TransactionLimitError"
      },
      {
        "name": "NotPermitted",
        "type": "NotPermittedFail"
      },
      {
        "name": "UnsatisfiedSignatureCondition",
        "type": "UnsatisfiedSignatureConditionFail"
      },
      {
        "name": "InstructionExecution",
        "type": "InstructionExecutionFail"
      },
      {
        "name": "WasmExecution",
        "type": "WasmExecutionFail"
      },
      {
        "name": "UnexpectedGenesisAccountSignature"
      },
      {
        "name": "Expired",
        "type": "TransactionExpired"
      }
    ]
  },
  "TransactionValue": {
    "Enum": [
      {
        "name": "Transaction",
        "type": "VersionedSignedTransaction"
      },
      {
        "name": "RejectedTransaction",
        "type": "VersionedRejectedTransaction"
      }
    ]
  },
  "TransferBox": {
    "Struct": [
      {
        "name": "source_id",
        "type": "EvaluatesTo<IdBox>"
      },
      {
        "name": "object",
        "type": "EvaluatesTo<Value>"
      },
      {
        "name": "destination_id",
        "type": "EvaluatesTo<IdBox>"
      }
    ]
  },
  "Trigger<FilterBox, Executable>": {
    "Struct": [
      {
        "name": "id",
        "type": "TriggerId"
      },
      {
        "name": "action",
        "type": "Action<FilterBox, Executable>"
      }
    ]
  },
  "Trigger<FilterBox, OptimizedExecutable>": {
    "Struct": [
      {
        "name": "id",
        "type": "TriggerId"
      },
      {
        "name": "action",
        "type": "Action<FilterBox, OptimizedExecutable>"
      }
    ]
  },
  "TriggerBox": {
    "Enum": [
      {
        "name": "Raw",
        "type": "Trigger<FilterBox, Executable>"
      },
      {
        "name": "Optimized",
        "type": "Trigger<FilterBox, OptimizedExecutable>"
      }
    ]
  },
  "TriggerEvent": {
    "Enum": [
      {
        "name": "Created",
        "type": "TriggerId"
      },
      {
        "name": "Deleted",
        "type": "TriggerId"
      },
      {
        "name": "Extended",
        "type": "TriggerNumberOfExecutionsChanged"
      },
      {
        "name": "Shortened",
        "type": "TriggerNumberOfExecutionsChanged"
      }
    ]
  },
  "TriggerEventFilter": {
    "Enum": [
      {
        "name": "ByCreated"
      },
      {
        "name": "ByDeleted"
      },
      {
        "name": "ByExtended"
      },
      {
        "name": "ByShortened"
      }
    ]
  },
  "TriggerFilter": {
    "Struct": [
      {
        "name": "origin_filter",
        "type": "FilterOpt<OriginFilter<TriggerEvent>>"
      },
      {
        "name": "event_filter",
        "type": "FilterOpt<TriggerEventFilter>"
      }
    ]
  },
  "TriggerId": {
    "Struct": [
      {
        "name": "name",
        "type": "Name"
      },
      {
        "name": "domain_id",
        "type": "Option<DomainId>"
      }
    ]
  },
  "TriggerNumberOfExecutionsChanged": {
    "Struct": [
      {
        "name": "trigger_id",
        "type": "TriggerId"
      },
      {
        "name": "by",
        "type": "u32"
      }
    ]
  },
  "UnregisterBox": {
    "Struct": [
      {
        "name": "object_id",
        "type": "EvaluatesTo<IdBox>"
      }
    ]
  },
  "UnsatisfiedSignatureConditionFail": {
    "Struct": [
      {
        "name": "reason",
        "type": "String"
      }
    ]
  },
  "UpgradableBox": {
    "Enum": [
      {
        "name": "Validator",
        "type": "Validator"
      }
    ]
  },
  "UpgradeBox": {
    "Struct": [
      {
        "name": "object",
        "type": "EvaluatesTo<UpgradableBox>"
      }
    ]
  },
  "ValidTransaction": {
    "Struct": [
      {
        "name": "payload",
        "type": "TransactionPayload"
      },
      {
        "name": "signatures",
        "type": "SignaturesOf<TransactionPayload>"
      }
    ]
  },
  "Validator": {
    "Struct": [
      {
        "name": "wasm",
        "type": "WasmSmartContract"
      }
    ]
  },
  "ValidatorEvent": {
    "Enum": [
      {
        "name": "Upgraded"
      }
    ]
  },
  "ValidatorMode": {
    "Enum": [
      {
        "name": "Path",
        "type": "ValidatorPath"
      },
      {
        "name": "Inline",
        "type": "Validator"
      }
    ]
  },
  "ValidatorPath": {
    "Struct": [
      {
        "name": "validator_relative_path",
        "type": "String"
      }
    ]
  },
  "Value": {
    "Enum": [
      {
        "name": "Bool",
        "type": "Bool"
      },
      {
        "name": "String",
        "type": "String"
      },
      {
        "name": "Name",
        "type": "Name"
      },
      {
        "name": "Vec",
        "type": "Vec<Value>"
      },
      {
        "name": "LimitedMetadata",
        "type": "Metadata"
      },
      {
        "name": "MetadataLimits",
        "type": "Limits"
      },
      {
        "name": "TransactionLimits",
        "type": "TransactionLimits"
      },
      {
        "name": "LengthLimits",
        "type": "LengthLimits"
      },
      {
        "name": "Id",
        "type": "IdBox"
      },
      {
        "name": "Identifiable",
        "type": "IdentifiableBox"
      },
      {
        "name": "PublicKey",
        "type": "PublicKey"
      },
      {
        "name": "SignatureCheckCondition",
        "type": "SignatureCheckCondition"
      },
      {
        "name": "TransactionValue",
        "type": "TransactionValue"
      },
      {
        "name": "TransactionQueryResult",
        "type": "TransactionQueryResult"
      },
      {
        "name": "PermissionToken",
        "type": "PermissionToken"
      },
      {
        "name": "Hash",
        "type": "Hash"
      },
      {
        "name": "Block",
        "type": "VersionedCommittedBlock"
      },
      {
        "name": "BlockHeader",
        "type": "BlockHeader"
      },
      {
        "name": "Ipv4Addr",
        "type": "Ipv4Addr"
      },
      {
        "name": "Ipv6Addr",
        "type": "Ipv6Addr"
      },
      {
        "name": "Numeric",
        "type": "NumericValue"
      },
      {
        "name": "Validator",
        "type": "Validator"
      }
    ]
  },
  "ValueKind": {
    "Enum": [
      {
        "name": "Bool"
      },
      {
        "name": "String"
      },
      {
        "name": "Name"
      },
      {
        "name": "Vec"
      },
      {
        "name": "LimitedMetadata"
      },
      {
        "name": "MetadataLimits"
      },
      {
        "name": "TransactionLimits"
      },
      {
        "name": "LengthLimits"
      },
      {
        "name": "Id"
      },
      {
        "name": "Identifiable"
      },
      {
        "name": "PublicKey"
      },
      {
        "name": "SignatureCheckCondition"
      },
      {
        "name": "TransactionValue"
      },
      {
        "name": "TransactionQueryResult"
      },
      {
        "name": "PermissionToken"
      },
      {
        "name": "Hash"
      },
      {
        "name": "Block"
      },
      {
        "name": "BlockHeader"
      },
      {
        "name": "Ipv4Addr"
      },
      {
        "name": "Ipv6Addr"
      },
      {
        "name": "Numeric"
      },
      {
        "name": "Validator"
      }
    ]
  },
  "ValueOfKey": {
    "Struct": [
      {
        "name": "key",
        "type": "Name"
      },
      {
        "name": "predicate",
        "type": "ValuePredicate"
      }
    ]
  },
  "ValuePredicate": {
    "Enum": [
      {
        "name": "Identifiable",
        "type": "StringPredicate"
      },
      {
        "name": "Container",
        "type": "Container"
      },
      {
        "name": "Display",
        "type": "StringPredicate"
      },
      {
        "name": "Numerical",
        "type": "SemiRange"
      },
      {
        "name": "TimeStamp",
        "type": "SemiInterval<u128>"
      },
      {
        "name": "Ipv4Addr",
        "type": "Ipv4Predicate"
      },
      {
        "name": "Ipv6Addr",
        "type": "Ipv6Predicate"
      },
      {
        "name": "Pass"
      }
    ]
  },
  "Vec<Event>": {
    "Vec": "Event"
  },
  "Vec<GenericPredicateBox<ValuePredicate>>": {
    "Vec": "GenericPredicateBox<ValuePredicate>"
  },
  "Vec<GenesisTransaction>": {
    "Vec": "GenesisTransaction"
  },
  "Vec<InstructionBox>": {
    "Vec": "InstructionBox"
  },
  "Vec<PeerId>": {
    "Vec": "PeerId"
  },
  "Vec<SignedTransaction>": {
    "Vec": "SignedTransaction"
  },
  "Vec<Value>": {
    "Vec": "Value"
  },
  "Vec<VersionedRejectedTransaction>": {
    "Vec": "VersionedRejectedTransaction"
  },
  "Vec<VersionedValidTransaction>": {
    "Vec": "VersionedValidTransaction"
  },
  "Vec<u8>": {
    "Vec": "u8"
  },
  "VersionedBlockMessage": {
    "Enum": [
      {
        "name": "V1",
        "type": "BlockMessage"
      }
    ]
  },
  "VersionedBlockSubscriptionRequest": {
    "Enum": [
      {
        "name": "V1",
        "type": "BlockSubscriptionRequest"
      }
    ]
  },
  "VersionedCommittedBlock": {
    "Enum": [
      {
        "name": "V1",
        "type": "CommittedBlock"
      }
    ]
  },
  "VersionedEventMessage": {
    "Enum": [
      {
        "name": "V1",
        "type": "EventMessage"
      }
    ]
  },
  "VersionedEventSubscriptionRequest": {
    "Enum": [
      {
        "name": "V1",
        "type": "EventSubscriptionRequest"
      }
    ]
  },
  "VersionedPaginatedQueryResult": {
    "Enum": [
      {
        "name": "V1",
        "type": "PaginatedQueryResult"
      }
    ]
  },
  "VersionedPendingTransactions": {
    "Enum": [
      {
        "name": "V1",
        "type": "PendingTransactions"
      }
    ]
  },
  "VersionedRejectedTransaction": {
    "Enum": [
      {
        "name": "V1",
        "type": "RejectedTransaction"
      }
    ]
  },
  "VersionedSignedQuery": {
    "Enum": [
      {
        "name": "V1",
        "type": "SignedQuery"
      }
    ]
  },
  "VersionedSignedTransaction": {
    "Enum": [
      {
        "name": "V1",
        "type": "SignedTransaction"
      }
    ]
  },
  "VersionedValidTransaction": {
    "Enum": [
      {
        "name": "V1",
        "type": "ValidTransaction"
      }
    ]
  },
  "WasmExecutionFail": {
    "Struct": [
      {
        "name": "reason",
        "type": "String"
      }
    ]
  },
  "WasmSmartContract": "Vec<u8>",
  "Where": {
    "Struct": [
      {
        "name": "expression",
        "type": "EvaluatesTo<Value>"
      },
      {
        "name": "values",
        "type": "SortedMap<Name, EvaluatesTo<Value>>"
      }
    ]
  },
  "i64": {
    "Int": "FixedWidth"
  },
  "u128": {
    "Int": "FixedWidth"
  },
  "u16": {
    "Int": "FixedWidth"
  },
  "u32": {
    "Int": "FixedWidth"
  },
  "u64": {
    "Int": "FixedWidth"
  },
  "u8": {
    "Int": "FixedWidth"
  }
}
