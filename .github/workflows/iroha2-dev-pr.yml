name: I2::Dev::Tests

on:
  pull_request:
    branches: [iroha2-dev]
    paths:
      - "**.rs"
      - "**.json"
      - "**.toml"
      - "**.yml"

      # Not part of the workspace
      - "!wasm/**"

env:
  CARGO_TERM_COLOR: always
  RUSTC_BOOTSTRAP: 1

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: 7272721/i2-ci:latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v1
      - name: Run tests
        run: mold -run cargo test --quiet --workspace --no-fail-fast -- --skip unstable_network --test-threads 2
      - name: Run iroha tests with network mock
        run: mold -run cargo test --quiet --features mock -- --ignored --skip unstable_network --test-threads 2
        working-directory: core/test_network
      - name: Run iroha_actor deadlock detection tests
        working-directory: actor
        run: mold -run cargo test --quiet --features deadlock_detection -- --skip unstable_network --test-threads 2
        if: always()

  # Coverage is both in PR and in push pipelines so that:
  # 1. PR can get coverage report from bot.
  # 2. Coverage bot can have results from `iroha2-dev` to report coverage changes.
  coverage:
    runs-on: ubuntu-latest
    container:
      image: 7272721/i2-ci:latest
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v1
      - name: Run tests
        run: mold -run cargo test --quiet --workspace --no-fail-fast -- --skip unstable_network --test-threads 2 || true
        env:
          RUSTFLAGS: "-Zinstrument-coverage"
          LLVM_PROFILE_FILE: "iroha-%p-%m.profraw"
      - name: Generate a grcov coverage report
        run: grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" -o lcov.info
      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@v1
        with:
          file: lcov.info
