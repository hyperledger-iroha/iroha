name: Publish (custom)

on:
  workflow_dispatch:
    inputs:
      image_type:
        description: "Type of the image to build"
        required: true
        type: choice
        options:
          - profiling
          - glibc
          - alpine
        default: glibc
      checkout_ref:
        description: "The branch, tag or SHA to checkout"
        required: true
        type: string
        default: main

env:
  DEFAULTS_DIR: defaults
  WASM_TARGET_DIR: wasm/target/prebuilt

jobs:
  build_wasm_libs:
    runs-on: ubuntu-latest
    container:
      image: hyperledger/iroha2-ci:nightly-2024-09-09
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.checkout_ref }}
      - name: Build wasm libs
        run: ./scripts/build_wasm.sh libs
      - name: Upload wasm libs to reuse in other jobs
        uses: actions/upload-artifact@v4
        with:
          name: wasm-libs
          path: ${{ env.WASM_TARGET_DIR }}/libs
          retention-days: 1

  image:
    needs: build_wasm_libs
    runs-on: [self-hosted, Linux, iroha2]
    container:
      image: hyperledger/iroha2-ci:nightly-2024-09-09
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.checkout_ref }}
      - name: Download wasm libs
        uses: actions/download-artifact@v4
        with:
          name: wasm-libs
          path: ${{ env.DEFAULTS_DIR }}/libs
      - name: Move the default executor
        run: mv ${{ env.DEFAULTS_DIR }}/libs/default_executor.wasm ${{ env.DEFAULTS_DIR }}/executor.wasm
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to Soramitsu Harbor
        uses: docker/login-action@v3
        with:
          registry: docker.soramitsu.co.jp
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        if: always()
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          install: true

      # glibc
      - name: Build and push iroha:glibc image
        uses: docker/build-push-action@v6
        if: ${{ inputs.image_type == 'glibc' }}
        with:
          push: true
          tags: docker.soramitsu.co.jp/iroha2/iroha:glibc-${{ github.sha }}
          labels: commit=${{ github.sha }}
          context: .

      # Profiling
      - name: Get the release tag
        if: ${{ inputs.image_type == 'profiling' }}
        run: |
          RELEASE_VERSION=${{ github.ref_name }}
          PREFIX='v'
          TAG=${RELEASE_VERSION#$PREFIX}
          echo "TAG=$TAG" >>$GITHUB_ENV
      - name: Build and push iroha:profiling-tag-sha image
        uses: docker/build-push-action@v6
        if: ${{ inputs.image_type == 'profiling' }}
        with:
          push: true
          tags: docker.soramitsu.co.jp/iroha2/iroha:profiling-${{ env.TAG }}-${{ github.sha }}
          labels: commit=${{ github.sha }}
          build-args: |
            "PROFILE=profiling"
            "RUSTFLAGS=-C force-frame-pointers=on"
            "FEATURES=profiling"
            "CARGOFLAGS=-Z build-std"
          context: .

      # Alpine (difference from glibc is the use of Dockerfile.musl)
      - name: Build and push iroha:alpine-sha image
        uses: docker/build-push-action@v6
        if: ${{ inputs.image_type == 'alpine' }}
        with:
          push: true
          tags: docker.soramitsu.co.jp/iroha2/iroha:alpine-${{ github.sha }}
          labels: commit=${{ github.sha }}
          file: Dockerfile.musl
          context: .
