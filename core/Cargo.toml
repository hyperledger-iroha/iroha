[package]
name = "iroha_core"

edition.workspace = true
version.workspace = true
authors.workspace = true

description.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true

license.workspace = true
keywords.workspace = true
categories.workspace = true

[features]
default = ["bridge", "cli", "telemetry"]

# Interoperability with popular blockchain networks (Substrate, Ether, etc.)
bridge = []
# Support lightweight telemetry, including diagnostics
telemetry = []
# Support the included CLI
cli = []
# Support Decentralised Exchange, including functionality for atomic exchange instruction
dex = []
# Support developer-specific telemetry.
# Should not be enabled on production builds.
dev-telemetry = ["telemetry", "iroha_telemetry/dev-telemetry"]
# Support Prometheus metrics. See https://prometheus.io/.
expensive-telemetry = ["iroha_telemetry/metric-instrumentation"]

[badges]
is-it-maintained-issue-resolution = { repository = "https://github.com/hyperledger/iroha" }
is-it-maintained-open-issues = { repository = "https://github.com/hyperledger/iroha" }
maintenance = { status = "actively-developed" }

[dependencies]
iroha_data_model = { version = "=2.0.0-pre-rc.13", path = "../data_model", features = ["transparent_api"] }
iroha_macro = { version = "=2.0.0-pre-rc.13", path = "../macro" }
iroha_p2p = { version = "=2.0.0-pre-rc.13", path = "../p2p" }
iroha_logger = { version = "=2.0.0-pre-rc.13", path = "../logger"}
iroha_crypto = { version = "=2.0.0-pre-rc.13", path = "../crypto" }
iroha_version = { version = "=2.0.0-pre-rc.13", path = "../version" }
iroha_config = { version = "=2.0.0-pre-rc.13", path = "../config" }
iroha_futures = { version = "=2.0.0-pre-rc.13", path = "../futures" }
iroha_telemetry = { version = "=2.0.0-pre-rc.13", path = "../telemetry" }
iroha_primitives = { version = "=2.0.0-pre-rc.13", path = "../primitives" }
iroha_genesis = { version = "=2.0.0-pre-rc.13", path = "../genesis" }

async-trait = "0.1.60"
dashmap = "5.4.0"
eyre = "0.6.8"
futures = { version = "0.3.25", default-features = false, features = ["std", "async-await"] }
parity-scale-codec = { version = "3.2.1", default-features = false, features = ["derive"] }
rand = "0.8.5"
serde = { version = "1.0.151", features = ["derive"] }
serde_json = "1.0.91"
tokio = { version = "1.23.0", features = ["sync", "time", "rt", "io-util", "rt-multi-thread", "macros", "fs"] }
crossbeam-queue = "0.3.8"
thiserror = "1.0.38"
wasmtime = "0.39.1"
parking_lot = { version = "0.12.1", features = ["deadlock_detection"] }
derive_more = "0.99.17"
itertools = "0.10.5"
sealed = "0.5.0"

[dev-dependencies]
criterion = "0.3.6"
hex = "0.4.3"
byte-unit = "4.0.18"
once_cell = "1.16.0"
tempfile = "3.3.0"

[[bench]]
name = "validation"
harness = false

[[bench]]
name = "kura"
harness = false


[package.metadata.cargo-all-features]
denylist = [
"bridge",
"dex",
"schema-endpoint",
"telemetry",
"test-network"
] # TODO: remove `dex` and `bridge` once there's code for them.
skip_optional_dependencies = true
